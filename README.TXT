------------------------------------------------------------------------
This is the project README file. Here, you should describe your project.
Tell the reader (someone who does not know anything about this project)
all they need to know. The comments should usually include at least:
------------------------------------------------------------------------

PROJECT TITLE: sandbox
PURPOSE OF PROJECT: to play with code
VERSION or DATE:
HOW TO START THIS PROJECT:
AUTHORS: john
USER INSTRUCTIONS:

DEFINITIONS
object: an instance

class: group of similar or related objects

methods: block of code to perform a task
getMethod (getter method)
setMethod (setter method)

parameters: variables within the parentheses of a method

constructor: a type of method
example: public Student(String name)
1. has no type (int, void, etc.)
2. has the same variable as the class' (Student)
3. inside the parentheses are a a data type (String) and a variable (name)
4. (String name) are parameters

public TicketMachine(int cost)
1. has no type
2. same variable as the class' (TicketMachine)
3. inside the parentheses are a data type (in) and a variable (cost)
4. (int cost) are parameters

field: a variable that's in a class, but not in a method or constructor
example: public class TicketMachine
{
    private int price;
    private int balance;
    private int total;
}
1. price, balance, and total are fields because they're in a class (TicketMachine)
2. they aren't in a method or constructor

access modifiers: modifies the visibility of the code to others (optional but good practice)
public: visible by everyone
private: visible by no one

types: the data type of the variable in a line
void: dosen't produce a result
int: integer/full number
return: output of the method
String: a sequence of characters (ABC, 123, "_")
boolean: true or false
examples: public int Amount()
1. the variable Amount uses a positive number as "int" indicates so



code examples: 
public class House
1. public is the access modifier
2. class is a data type
3. House is a variable (in this case the name of the class)